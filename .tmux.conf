# For vim in tmux
set -g default-terminal "screen-256color"

# Large scrollback buffer size
set -g history-limit 100000

# Change prefix
unbind C-b
set -g prefix C-s

# Enable vim mode
setw -g mode-keys vi

# split window like vim
# vim's defination of a horizontal/vertical split is revised from tumx's
bind s split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# move arount panes wiht hjkl, as one would in vim after C-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by,
# only one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g window-status-format " #I #W "
set-option -g window-status-current-format " #I #W "

# use -style config for version start from 2.9
if-shell 'VERSION_START_FROM="2.9"; \
        CURRENT_VERSION=$(tmux -V | cut -d " " -f2 | grep -o -E "[0-9|.]+"); \
        [ $(printf "%s\n" $CURRENT_VERSION $VERSION_START_FROM | sort -Vr | head -n1) = $CURRENT_VERSION ]' \
    " \
    set-option -g window-status-current-style bg=colour240,fg=colour255; \
    set-option -g window-status-style bg=colour233,fg=colour8 \
    " \
    " \
    set-option -g window-status-current-bg colour240 \
    set-option -g window-status-current-fg colour255 \
    set-option -g window-status-current-attr default \
    set-option -g window-status-bg colour233 \
    set-option -g window-status-fg colour8 \
    "

set-option -g status-bg colour233
set-option -g status-fg colour233
set-option -g pane-border-status bottom
set-option -g pane-border-format " #P: #{pane_title} | #{pane_current_command} "

# start window index at 1 instead of zero.
set -g base-index 1

# add shortcut for search window and session with percol
bind f split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"

# poweline
# mkdir -p .tmux  && git clone https://github.com/erikw/tmux-powerline.git .tmux/tmux-powerline
if-shell "test -f ~/.tmux/tmux-powerline/powerline.sh" \
        'set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"; \
        set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"'
if-shell "if [ -f ~/.tmux/tmux-powerline/powerline.sh  ]; then false; else true; fi" \
        "set-option -g status-left \"#[bg=colour240, fg=colour255]\[prefix: c-s\]\"; \
        set-option -g status-right \"#[bg=colour240, fg=colour255]\[session: #S\]\""
